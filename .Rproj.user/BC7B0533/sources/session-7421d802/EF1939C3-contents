---
title: "Textbook notes"
format: html
---
# Chater 3: Simple linear regression

## 3.1 & 3.2 - Introduction
An introduction and explanation of simple linear regression.

## 3.3 - Fitting the model: Method of least squares

```{r}
x <- c(1, 2, 3, 4, 5)
y <- c(1, 1, 2, 2, 4)

n <- length(x) #x and y have the same length so it will work either way

# Calculating sums
sum_x <- sum(x)
sum_y <- sum(y)
sum_x2 <- sum(x^2)
sum_y2 <- sum(y^2)
sum_xy <- sum(x*y) #same as sum of y*x

# mean calculations
x_bar <- mean(x)
y_bar <- mean(y)

# SS formulas
SS_yy = sum_y2 - n * (y_bar)^2
SS_xx = sum_x2 - n * (x_bar)^2
SS_xy = sum_xy - n * x_bar * y_bar


# Slope and intercept of least squares model(parameters)
b1_hat <- SS_xy / SS_xx
b0_hat <- y_bar - b1_hat * x_bar


# draw scatter plot & add least squares line
plot(
  x, y, 
     main = "Graph of x vs. y",
     xlab = "x label",
     ylab = "y label",
     pch = 19,
     col = "blue"
  )

abline(
  a = b0_hat,
  b = b1_hat,
  col = "red",
  lwd = 2
)
```


## 3.4 - Model Assumptions
Nothing practical, just background theory.


## 3.5 - An estimator of σ^2
```{r}
# predicted values
y_hat <- b0_hat + b1_hat * x
residuals <- y - y_hat
SSE <- sum(residuals^2)

# calculating SSE using formula. Will give same answer as above
sse = SS_yy - b1_hat * SS_xy

#estimators
s_squared = SSE / (n-2)
s = sqrt(s_squared)

```

```{r}
# Coefficient of variation
CV = 100 * (s / y_bar)

```



## 3.6 - Assessing the utility of the model
### Making inferences about the slope β1

```{r}
# this part we normally get from t-distribution table, when working manually
alpha <- 0.05
df <- n-2

t_critical <- qt(1 - alpha/2, df)  # Equivalent to qt(0.975, df)
# Or using lower.tail = FALSE:
t_critical <- qt(alpha/2, df, lower.tail = FALSE)

# using formula in the textbook
t = b1_hat / (s / sqrt(SS_xx))

# bounds for Confidence interval
lower_bound <- b1_hat - (t_critical * (s / sqrt(SS_xx)))
upper_bound <- b1_hat + (t_critical * (s / sqrt(SS_xx)))

```


## 3.7 - The coefficient of correlation
```{r}
r <- SS_xy / sqrt(SS_xx * SS_yy)

#tests
test <- (r * sqrt(df)) / sqrt(1-r^2)
```

## 3.8 - The coefficient of determination
```{r}
r_squared <- r^2

# using textbook formula
r_sq <- 1 - (SSE / SS_yy)

```















